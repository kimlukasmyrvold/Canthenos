@using Canthenos.DataAccessLibrary.Models
@using Canthenos.DataAccessLibrary

@inject ISnacksData Db


<div class="products">
    <div class="products__container">
        <div class="products__container__aside">
            <p class="products__container__aside__title">Snacks</p>
            <div class="products__container__aside__options">
                <div class="products__container__aside__options__sort_by">
                    <Dropdown Placeholder="Sort By" Options="_sortByOptions" Chosen="@SortyByOption"></Dropdown>
                </div>
            </div>
        </div>
        <div class="products__container__content">
            @if (_snacks is null)
            {
                <p>
                    <em>Loading...</em>
                </p>
            }
            else
            {
                foreach (var snack in _snacks)
                {
                    <Product Type="Snack" Image="@snack.ImagePath" Name="@snack.Name" Description="@snack.Description" Price="@snack.Price"></Product>
                }
            }
        </div>

    </div>
</div>


@code {

    private List<SnacksModel>? _snacks;

    protected override async Task OnInitializedAsync()
    {
        _snacks = await Db.GetSnacks();
    }

    private Dictionary<int, string> _sortByOptions = new()
    {
        { 0, "Popularity" },
        { 1, "Price (Low to High)" },
        { 2, "Price (High to Low)" },
        { 3, "Name (A to Z)" },
        { 4, "Name (Z to A)" }
    };

    private int _sortBySelected;

    private async Task SortyByOption(int option)
    {
        _sortBySelected = option;
        _snacks = await Db.GetSnacks(_sortBySelected);
    }

}